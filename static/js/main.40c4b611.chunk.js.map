{"version":3,"sources":["components/Statistics.styles.jsx","components/Statistics.jsx","components/FeedbackOptions.styles.jsx","components/FeedbackOptions.jsx","components/Notification.jsx","components/Section.styles.jsx","components/Section.jsx","App.js","index.js"],"names":["Thumb","styled","div","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","map","name","type","onClick","toUpperCase","Notification","message","section","Section","props","title","children","App","state","onBtnClick","e","btnValue","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","btnNames","Object","keys","className","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAQC,IAAOC,IAAV,0B,OCYHC,I,EAAAA,EAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAACR,EAAD,WACE,uCAAUI,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAAuBH,GAAQI,IAA/B,WCPOC,EAASR,IAAOS,OAAV,2gBCYJC,MAZf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,cAACN,EAAD,CAAQO,KAAK,SAAoBD,KAAMA,EAAME,QAASJ,EAAtD,SACGE,EAAKG,eADmBH,SCEpBI,I,EAAAA,EARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BACE,4BAAIA,OCDGpB,EAAQC,IAAOoB,QAAV,6HCUHC,MAVf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,eAAC,EAAD,WACE,4BAAID,IACHC,MCDcC,E,4MAOnBC,MAAQ,CACNvB,KAAM,EAAKmB,MAAMnB,KACjBC,QAAS,EAAKkB,MAAMlB,QACpBC,IAAK,EAAKiB,MAAMjB,K,EAGlBsB,WAAa,SAAAC,GACX,IAAMC,EAAWD,EAAEE,OAAOhB,KAC1B,EAAKiB,UAAS,SAAAC,GAAS,sBACpBH,EAAWG,EAAUH,GAAY,O,EAItCI,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB6B,gCAAkC,WAChC,MAA+B,EAAKR,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OADgB8B,KAAKC,MAAc,IAAPjC,GAAeA,EAAOC,EAAUC,K,4CAI9D,WACE,MAA+BgC,KAAKX,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBiC,EAAWC,OAAOC,KAAKH,KAAKX,OAClC,OACE,sBAAKe,UAAU,YAAf,UACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS2B,EACT1B,gBAAiByB,KAAKV,eAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACIc,KAAKJ,qBAGL,cAAC,EAAD,CACE9B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,KAAKJ,mBACZ1B,mBAAoB8B,KAAKH,kCAP3B,cAAC,EAAD,CAAcf,QAAQ,+B,GA5CDuB,aAAZjB,EACZkB,aAAe,CACpBxC,KAAM,EACNC,QAAS,EACTC,IAAK,GCLTuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40c4b611.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Thumb = styled.div``;\n","import { Thumb } from './Statistics.styles';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <Thumb>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total()}</p>\n      <p>Positive feedback: {good && positivePercentage()}%</p>\n    </Thumb>\n  );\n}\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border: 1px solid #000;\n  border-radius: 4px;\n\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n  :last-child {\n    background-color: #f58484;\n    &:hover,\n    :focus {\n      background-color: #eb4c4c;\n    }\n  }\n  :first-child {\n    background-color: #a4eea4;\n    &:hover,\n    :focus {\n      background-color: #5af05a;\n    }\n  }\n  :not(:last-child, :first-child) {\n    background-color: #f0f092;\n    &:hover,\n    :focus {\n      background-color: #f3f34b;\n    }\n  }\n`;\n","import { Button } from './FeedbackOptions.styles';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(name => (\n        <Button type=\"button\" key={name} name={name} onClick={onLeaveFeedback}>\n          {name.toUpperCase()}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n","function Notification({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Thumb = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Thumb } from './Section.styles';\n\nfunction Section(props) {\n  const { title, children } = props;\n  return (\n    <Thumb>\n      <p>{title}</p>\n      {children}\n    </Thumb>\n  );\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  onBtnClick = e => {\n    const btnValue = e.target.name;\n    this.setState(prevState => ({\n      [btnValue]: prevState[btnValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const percent = Math.round((good * 100) / (good + neutral + bad));\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const btnNames = Object.keys(this.state);\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={btnNames}\n            onLeaveFeedback={this.onBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}