{"version":3,"sources":["components/Statistics.jsx","components/FeedbackOptions.jsx","components/Notification.jsx","components/Section.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","name","type","onClick","toUpperCase","Notification","message","Section","props","title","children","App","state","onBtnClick","e","btnValue","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","btnNames","Object","keys","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAYeA,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAAuBH,GAAQI,IAA/B,WCKSC,MAZf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBAAQC,KAAK,SAAoBD,KAAMA,EAAME,QAASJ,EAAtD,SACGE,EAAKG,eADmBH,SCIpBI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BACE,4BAAIA,OCOKC,MAVf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,oCACE,4BAAID,IACHC,MCCcC,E,4MAOnBC,MAAQ,CACNpB,KAAM,EAAKgB,MAAMhB,KACjBC,QAAS,EAAKe,MAAMf,QACpBC,IAAK,EAAKc,MAAMd,K,EAGlBmB,WAAa,SAAAC,GACX,IAAMC,EAAWD,EAAEE,OAAOf,KAC1B,EAAKgB,UAAS,SAAAC,GAAS,sBACpBH,EAAWG,EAAUH,GAAY,O,EAItCI,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB0B,gCAAkC,WAChC,MAA+B,EAAKR,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OADgB2B,KAAKC,MAAc,IAAP9B,GAAeA,EAAOC,EAAUC,K,4CAI9D,WACE,MAA+B6B,KAAKX,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB8B,EAAWC,OAAOC,KAAKH,KAAKX,OAClC,OACE,gCACE,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS0B,EACTzB,gBAAiBwB,KAAKV,eAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACIc,KAAKJ,qBAGL,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,mBACZvB,mBAAoB2B,KAAKH,kCAP3B,cAAC,EAAD,CAAcd,QAAQ,+B,GA5CDqB,aAAZhB,EACZiB,aAAe,CACpBpC,KAAM,EACNC,QAAS,EACTC,IAAK,GCLTmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11329b4a.chunk.js","sourcesContent":["function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total()}</p>\n      <p>Positive feedback: {good && positivePercentage()}%</p>\n    </div>\n  );\n}\n\nexport default Statistics;\n","function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(name => (\n        <button type=\"button\" key={name} name={name} onClick={onLeaveFeedback}>\n          {name.toUpperCase()}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n","function Notification({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default Notification;\n","function Section(props) {\n  const { title, children } = props;\n  return (\n    <section>\n      <p>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  onBtnClick = e => {\n    const btnValue = e.target.name;\n    this.setState(prevState => ({\n      [btnValue]: prevState[btnValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const percent = Math.round((good * 100) / (good + neutral + bad));\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const btnNames = Object.keys(this.state);\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={btnNames}\n            onLeaveFeedback={this.onBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}